/*
 #set ($l10nKeys = [
  'web.widgets.syntaxPicker.conversionConfirmation.title',
  'web.widgets.syntaxPicker.conversionUnsupported.acknowledge',
  'no',
  'yes',
  [
    'web.widgets.syntaxPicker.conversionConfirmation.message',
    '<strong class="previousSyntax"></strong>',
    '<strong class="nextSyntax"></strong>'
  ],
  [
    'web.widgets.syntaxPicker.conversionUnsupported.message',
    '<strong class="previousSyntax"></strong>',
    '<strong class="nextSyntax"></strong>'
  ],
  'web.widgets.syntaxPicker.conversion.inProgress',
  'web.widgets.syntaxPicker.conversion.done',
  'web.widgets.syntaxPicker.conversion.failed',
  'web.widgets.syntaxPicker.contentUpdate.inProgress',
  'web.widgets.syntaxPicker.contentUpdate.done',
  'web.widgets.syntaxPicker.contentUpdate.failed'
])
#set ($l10n = {})
#foreach ($key in $l10nKeys)
  #set ($params = $key.subList(1, $key.size()))
  #if ($params)
    #set ($discard = $l10n.put($key[0], $services.localization.render($key[0], $params)))
  #else
    #set ($discard = $l10n.put($key, $services.localization.render($key)))
  #end
#end
#set ($iconNames = ['cross'])
#set ($icons = {})
#foreach ($iconName in $iconNames)
  #set ($discard = $icons.put($iconName, $services.icon.renderHTML($iconName)))
#end
#[[*/
'use strict';(function(h,q){require(["jquery","xwiki-syntax-converter","bootstrap"],function(d,l){d(document).on("change.xwikiDocumentSyntaxPicker","#xwikidocsyntaxinput2",function(){var b=d(this),e=b.data("previousSyntax"),g=a(b);k(e,g).then(m=>{b.focus();f(b,{previousSyntax:e,syntax:g,convertSyntax:m.convertSyntax})})});var a=function(b){b=b.find("option").filter(":selected");return d.extend(b.data("syntax"),{id:b.val(),label:b.text(),parser:b.data("parser"),renderer:b.data("renderer")})},f=function(b,
e){var g=b.next('input[name="convertSyntax"]').val(e.convertSyntax).data("documentReference");e=d.extend(e,{promise:Promise.resolve(),savedSyntax:b.data("savedSyntax"),syntaxConverter:l,documentReference:XWiki.Model.resolve(g,XWiki.EntityType.DOCUMENT,XWiki.currentDocument.documentReference)});b.prop("disabled",!0).trigger("xwiki:document:syntaxChange",e);e.promise.finally(b.prop.bind(b,"disabled",!1));b.data("previousSyntax",e.syntax)},c=d('\n    <div id="syntaxConversionConfirmation" class="modal" tabindex="-1" role="dialog">\n      <div class="modal-dialog" role="document">\n        <div class="modal-content">\n          <div class="modal-header">\n            <button type="button" class="close" data-dismiss="modal" aria-label="Close">'+
q.cross+'</button>\n            <h4 class="modal-title"></h4>\n          </div>\n          <div class="modal-body"></div>\n          <div class="modal-footer">\n            <button type="button" class="btn btn-default dontConvertSyntax" data-dismiss="modal"></button>\n            <button type="button" class="btn btn-primary convertSyntax" data-dismiss="modal"></button>\n            <button type="button" class="btn btn-primary acknowledge" data-dismiss="modal"></button>\n          </div>\n        </div>\n      </div>\n    </div>\n  ').on("shown.bs.modal",
function(){c.find(".btn-primary").filter(":visible").focus()}).on("hidden.bs.modal",function(){c.data("deferred").resolve(c.data("data"))}).on("click","button.convertSyntax",function(){c.data("data").convertSyntax=!0}).appendTo("body").modal({show:!1});c.find(".modal-title").text(h["web.widgets.syntaxPicker.conversionConfirmation.title"]);c.find("button.dontConvertSyntax").text(h.no);c.find("button.convertSyntax").text(h.yes);c.find("button.acknowledge").text(h["web.widgets.syntaxPicker.conversionUnsupported.acknowledge"]);
var k=function(b,e){var g=b.parser&&e.renderer;var m=g?h["web.widgets.syntaxPicker.conversionConfirmation.message"]:h["web.widgets.syntaxPicker.conversionUnsupported.message"];c.find(".modal-body").html(m);c.find(".previousSyntax").text(b.label);c.find(".nextSyntax").text(e.label);c.find("button.dontConvertSyntax, button.convertSyntax").toggle(g);c.find("button.acknowledge").toggle(!g);var n;b=new Promise((r,t)=>{n={resolve:r,reject:t}});c.data("deferred",n).data("data",{convertSyntax:!1}).modal("show");
return b};d(document).on("xwiki:actions:cancel.xwikiDocumentSyntaxPicker",function(b){b=d(b.target).closest("form, .form").find("#xwikidocsyntaxinput2");if(b.length){var e=a(b),g=b.data("savedSyntax");e.id!==g.id&&f(b,{previousSyntax:e,syntax:g,convertSyntax:"true"===b.next('input[name="convertSyntax"]').val(),reverting:!0})}});d(document).on("xwiki:document:saved.xwikiDocumentSyntaxPicker",function(b){b=d(b.target).closest("form, .form").find("#xwikidocsyntaxinput2");b.length&&b.data("savedSyntax",
a(b))});var p=function(b,e){d(e&&e.elements||document).find("#xwikidocsyntaxinput2").each(function(){var g=d(this);if(!g.data("savedSyntax")){var m=a(g);g.data("savedSyntax",m);g.data("previousSyntax",m)}})};d(document).on("xwiki:dom:updated.xwikiDocumentSyntaxPicker",p);d(p)});define("xwiki-syntax-converter",["jquery","xwiki-meta"],function(d,l){return{convert:function(a,f,c){a={form_token:l.form_token,xpage:"get",contentTransformed:!1,outputSyntax:a.type.id,outputSyntaxVersion:a.version};f&&(a.syntaxId=
f.id);c&&(a.content=c);return d.post(XWiki.currentDocument.getURL("preview"),a)},render:function(a,f){a={form_token:l.form_token,xpage:"get",outputTitle:!0,syntaxId:a.id};f&&(a.content=f);return d.post(XWiki.currentDocument.getURL("preview"),a).then(function(c){c=d("<div></div>").html(c);return{renderedTitle:c.find("#document-title h1").html(),renderedContent:c.find("#xwikicontent").html()}})}}});require(["jquery"],function(d){d(document).on("xwiki:document:syntaxChange.wikiEditor",function(l,a){var f=
d("#content");if(f.data("syntax")===a.previousSyntax.id&&XWiki.currentDocument.documentReference.equals(a.documentReference))if(a.convertSyntax&&f.val()&&!a.reverting){var c;a.promise=a.promise.then(()=>{c=new XWiki.widgets.Notification(h["web.widgets.syntaxPicker.conversion.inProgress"],"inprogress");return a.syntaxConverter.convert(a.syntax,a.previousSyntax,f.val())}).then(k=>{f.val(k).data("syntax",a.syntax.id).trigger("change");c.replace(new XWiki.widgets.Notification(h["web.widgets.syntaxPicker.conversion.done"],
"done"))}).catch(()=>{c.replace(new XWiki.widgets.Notification(h["web.widgets.syntaxPicker.conversion.failed"],"error"))})}else f.data("syntax",a.syntax.id)})});require(["jquery"],function(d){d(document).on("xwiki:document:syntaxChange.viewMode",function(l,a){var f=d("#xwikicontent").not("[contenteditable]");if(f.length&&XWiki.currentDocument.documentReference.equals(a.documentReference)){var c;a.promise=a.promise.then(()=>{c=new XWiki.widgets.Notification(h["web.widgets.syntaxPicker.contentUpdate.inProgress"],
"inprogress");var k=a.convertSyntax&&a.syntax.id!==a.savedSyntax.id?a.syntaxConverter.convert(a.syntax).then(a.syntaxConverter.render.bind(a.syntaxConverter,a.syntax)):a.syntaxConverter.render(a.syntax);return k}).then(k=>{d("#document-title h1").html(k.renderedTitle);f.html(k.renderedContent);d(document).trigger("xwiki:dom:updated",{elements:f.toArray()});c.replace(new XWiki.widgets.Notification(h["web.widgets.syntaxPicker.contentUpdate.done"],"done"))}).catch(()=>{c.replace(new XWiki.widgets.Notification(h["web.widgets.syntaxPicker.contentUpdate.failed"],
"error"))})}})})}).apply("]]#",$jsontool.serialize([$l10n,$icons]));
//# sourceMappingURL=syntaxPicker.min.js.map
